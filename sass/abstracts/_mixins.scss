@mixin clearfix {
    &::after {
        content: "";
        display: table;
        clear: both;
    }
}

@mixin absCenter {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

@mixin border-gradient {
    
    border-image-source: linear-gradient(to right, $color-grey-light 0%, $color-white 100%); 
    border-image-slice: 1;
}

@mixin flex-browsers{
    -webkit-box-flex: 1;
    -ms-flex: 1;
    flex: 1;
}

@mixin justify-browsers{
    -webkit-box-pack: justify;
    -ms-flex-pack: justify;
    justify-content: space-between;
}

@mixin evenly-content{
    -webkit-box-pack: justify;
    -ms-flex-pack: justify;
    justify-content: space-evenly;
}

@mixin flex-zero{
    -webkit-box-flex: 0;
    -ms-flex: 0;
    flex: 0;
}

@mixin flex-one{
    -webkit-box-flex: 1;
    -ms-flex: 1;
    flex: 1;
}

@mixin display-flex-browsers{
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
}

@mixin flex-direction-column{
    -webkit-box-orient: vertical;
        -webkit-box-direction: normal;
        -ms-flex-direction: column;
        flex-direction: column;
}

@mixin flex-wrap-wrap{
    -ms-flex-wrap: wrap;
    flex-wrap: wrap;
}

@mixin flex-nowrap{
    -ms-flex-wrap: nowrap;
    flex-wrap: nowrap;
}


@mixin center-align-items{
    -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

@mixin transform-scaleY-one{
    -webkit-transform: scaleY(1);
    -moz-transform: scaleY(1);
    -o-transform: scaleY(1);
    -ms-transform: scaleY(1);
    transform: scaleY(1);
}

@mixin transition-all-easeInOut{
    -webkit-transition: all 0.7s ease-in-out;
    -moz-transition: all 0.7s ease-in-out;
    -o-transition: all 0.7s ease-in-out;
    -ms-transition: all 0.7s ease-in-out;
    transition: all 0.7s ease-in-out;
}

@mixin transition-all-linear{
    -webkit-transition: all 0.5s linear;
       -moz-transition: all 0.5s linear;
       -o-transition: all 0.5s linear;
       -ms-transition: all 0.5s linear;
       transition: all 0.5s linear;
}
  
@mixin transparent{
    /* Theoretically for IE 8 & 9 (more valid) */	
    /* ...but not required as filter works too */
    /* should come BEFORE filter */
    -ms-filter: "progid: DXImageTransform.Microsoft.Alpha(Opacity=0)";
    filter: alpha(opacity=0);
    opacity: 0;
}
@mixin not-transparent{
    /* Theoretically for IE 8 & 9 (more valid) */	
    /* ...but not required as filter works too */
    /* should come BEFORE filter */
    -ms-filter: "progid: DXImageTransform.Microsoft.Alpha(Opacity=100)";
       filter: alpha(opacity=100);
       opacity: 1;
}

@mixin transform-scale-zero{
    -webkit-transform: scale(0);
    -moz-transform: scale(0);
    -o-transform: scale(0);
    -ms-transform: scale(0);
    transform: scale(0);
}

@mixin transform-scale-ten{
    -webkit-transform: scale(10);
       -moz-transform: scale(10);
       -o-transform: scale(10);
       -ms-transform: scale(10);
       transform: scale(10);
}

@mixin transform-scale-one{
    -webkit-transform: scale(1);
       -moz-transform: scale(1);
       -o-transform: scale(1);
       -ms-transform: scale(1);
       transform: scale(1);
}




// MEDIA QUERY MANAGER
/*
0 - 600px:      Phone
600 - 900px:    Tablet portrait
900 - 1200px:   Tablet landscape
[1200 - 1800] is where our normal styles apply
1800px + :      Big desktop

$breakpoint arguement choices:
- phone
- tab-port
- tab-land
- big-desktop

ORDER: Base + typography > general layout + grid > page layout > components

1em = 16px
*/
@mixin respond($breakpoint) {
    @if $breakpoint == phone {
        @media only screen and (max-width: 37.5em) { @content };    //600px
    }
    @if $breakpoint == tab-port {
        @media only screen and (max-width: 56.25em) { @content };     //900px
    }
    @if $breakpoint == tab-land {
        @media only screen and (max-width: 75em) { @content };    //1200px
    }
    @if $breakpoint == big-desktop {
        @media only screen and (min-width: 112.5em) { @content };    //1800
    }
}

